/*
 * This Java source file was generated by the Gradle 'init' task.
 */
import org.junit.Test;

import java.util.ArrayList;
import java.util.List;

import static org.junit.Assert.*;

public class LibraryTest {
    @Test public void testRoll() {
        Library lib = new Library();
        int num = 6;
        int[] rolls = lib.roll(num);
        assertNotNull(rolls);
        assertEquals(num, rolls.length);
    }

    @Test public void testContainsDuplicates(){
        Library lib = new Library();
        int[] unique = {1,2,3,4,5,6};
        int[] dupes = {1,1,1,1,1,1};
        assertFalse(lib.containsDuplicates(unique));
        assertTrue(lib.containsDuplicates(dupes));
    }

    @Test public void testCalculatesAverage(){
        Library lib = new Library();
        int[] array1 = {1,1,1,1};
        float avg1 = 1f;
        int[] array2 = {1,2,3,4};
        float avg2 = 2.5f;
        assertEquals(avg1, lib.calcAvg(array1), 0);
        assertEquals(avg2, lib.calcAvg(array2), 0);
    }

    @Test public void testLowestArrayAverage(){
        Library lib = new Library();
        int[][] nested = {
                {1,1,1,1,1},
                {2,2,2,2,2},
                {3,3,3,3,3}
        };
        int[] lowest = {1,1,1,1,1};
        assertNotNull(lib.lowestArrayAvg(nested));
        assertArrayEquals(lowest, lib.lowestArrayAvg(nested));
    }

    @Test public void testAnalyzeWeather(){
        Library lib = new Library();
        int[][] weeklyMonthTemperatures = {
                {66, 64, 58, 65, 71, 57, 60},
                {57, 65, 65, 70, 72, 65, 51},
                {55, 54, 60, 53, 59, 57, 61},
                {65, 56, 55, 52, 55, 62, 57}
        };
        lib.analyzeWeather(weeklyMonthTemperatures);
        assertTrue(true);
    }

    @Test public void testTally(){
        Library lib = new Library();
        List<String> votes = new ArrayList<>();
        votes.add("Bush");
        votes.add("Bush");
        votes.add("Bush");
        votes.add("Shrub");
        votes.add("Hedge");
        votes.add("Shrub");
        votes.add("Bush");
        votes.add("Hedge");
        votes.add("Bush");

        String winner = lib.tally(votes);
        System.out.println(winner + " received the most votes!");
        assertNotNull(winner);
        assertEquals("Bush", winner);
    }
}
